import copyimport pandas as pd# Chemin vers le fichier Excelexcel_file_path = "distancesExcel.xlsx"# Chargement du fichier Exceldf = pd.read_excel(excel_file_path)# Assurez-vous d'utiliser les noms exacts des colonnes ou les indices appropriÃ©scolonne_1 = df['Colonne1'].tolist()  # Remplacez 'NomColonne1' par le nom de la colonnecolonne_2 = df['Colonne2'].tolist()  # Remplacez 'NomColonne2' par le nom de la colonne# Afficher les listes# print("Colonne 1 :", colonne_1)# print("Colonne 2 :", colonne_2)#==== InitialisationL = [2, 3, 1, 2, 93, 5]L2= [3, 3, 42, 34, 53, 5]#==== Functionsdef findMax(L : list) :    n = len(L)    max = L[0]     for i in range(1, n) :        if L[i] > max :            max = L[i]              return maxdef findMin(L : list) :    n = len(L)    min = L[0]     minIndex = 0    for i in range(1, n) :        if L[i] < min :            min = L[i]            minIndex = i    return min, minIndexdef orderList(L : list) :    orderedList = []    max = findMax(L)    copyL = copy.deepcopy(L)    for i in range(0, len(L)) :        minAndMinIndex = findMin(copyL)                orderedList.append(minAndMinIndex[0])                copyL[ minAndMinIndex[1]] =  max*2    return orderedListdef distanceBetweenLists(L1, L2) :    distances = []    orderedL1 = orderList(L1)    orderedL2 = orderList(L2)    for i in range(len(L1)):                distance = abs(orderedL1[i]- orderedL2[i])       # print(distance)        distances.append(distance)            return distancesdef sumList(L : list) :    s = 0    for i in range(0, len(L)) :        s = s + L[i]    return sdef extractNumbers(L : list ) :    noDoublons = []    orderedL = orderList(L)    noDoublons.append(orderedL[0])    for i in range(1,len(orderedL)) :        if orderedL[i] not in noDoublons :            noDoublons.append(orderedL[i])    return noDoublonsdef dictionnaryOfOccurences(L1, L2) :        occurences = {element : 0 for element in extractNumbers(L1)}        orderedL2 = orderList(L2)        for key in occurences.keys() :        occurencesInL2 = 0 ;        for i in range(len(orderedL2)) :            if key == orderedL2[i] :                occurencesInL2 +=1                         occurences[key] = occurencesInL2            return occurences    def productOccurence(L1,L2) :    dicOccurence = dictionnaryOfOccurences(L1,L2)        productSum = 0        for key in dicOccurence.keys() :        productSum += key*dicOccurence[key]    return productSum#==== Tests# print(findMin(L))# print(orderList(L))# print(orderList(L2))# print(distanceBetweenLists(L, L2 ))# print(sumList(distanceBetweenLists(L,L2)))# distancesExo = distanceBetweenLists(colonne_1, colonne_2)# SommesDistances = sumList(distancesExo)# print("somme",SommesDistances)print(extractNumbers(L))dic = dictionnaryOfOccurences(L,L2)print(dic)print(productOccurence(colonne_1,colonne_2))